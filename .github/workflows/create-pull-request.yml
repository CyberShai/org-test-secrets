name: Create pull request

on:
  pull_request:
    branches:
      - main

env:
  GH_TOKEN: ${{ github.TOKEN }}
  BRANCH_NAME: ""

jobs:
  create_integration_branch:
    outputs:
      branch_name: ${{ steps.branch_name.outputs.branch }}
      output1: ${{ steps.branch_name.outputs.test }}

    runs-on: ubuntu-20.04
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2

      - name: Create branch name
        id: branch_name
        shell: bash
        run: |
          echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)"
          echo "::set-output name=branch::$(echo ${GITHUB_HEAD_REF} | tr / -)"
          echo "::set-output name=test::hello"


  create-pull-request:
    runs-on: ubuntu-20.04
    needs: create_integration_branch
    steps:
      - name: Get value
        run: |
          echo "Branch name: ${{needs.create_integration_branch.outputs.branch}}"
          echo ${{needs.create_integration_branch.outputs.output1}}


  
  
  
  # create-pull-request:
  #   permissions:
  #     pull-requests: write
  #     security-events: write
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Build info
  #       run: |
  #         echo "Dispatch workflow"
  #         echo "GH_TOKEN: ${{ env.GH_TOKEN }}"
  #         echo "head: ${{ github.ref_name }}"

  #     - name: Get branch name (pull request)
  #       if: github.event_name == 'pull_request'
  #       shell: bash
  #       run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

  #     - name: Debug
  #       run: echo ${{ env.BRANCH_NAME }}

  #     - name: Create Pull Request
  #       uses: actions/github-script@v6
  #       with:
  #         script: |
  #           const { repo, owner } = context.repo;
  #           const result = await github.rest.pulls.create({
  #             title: '[Example] Simple demo 4',
  #             owner,
  #             repo,
  #             head: '${{ env.BRANCH_NAME }}',
  #             base: 'test-create-pr-manual',
  #             body: [
  #               'This PR is auto-generated by',
  #               '[actions/github-script](https://github.com/actions/github-script).'
  #             ].join('\n')
  #           });
  #           github.rest.issues.addLabels({
  #             owner,
  #             repo,
  #             issue_number: result.data.number,
  #             labels: ['feature', 'automated pr']
  #           });
